*****************************************************************************************************
cat << EOF > startup.sh
#! /bin/bash
apt-get update
apt-get install -y nginx
service nginx start
sed -i -- 's/nginx/Google Cloud Platform - '"\$HOSTNAME"'/' /var/www/html/index.nginx-debian.html
EOF
******************************************************************************************************


Create an instance template, which uses the startup script:
************************************************
gcloud compute instance-templates create nginx-template \
         --metadata-from-file startup-script=startup.sh
************************************************



Create a target pool.
*********************************************************
gcloud compute target-pools create nginx-pool
*********************************************************


Create a managed instance group using the instance template:
*****************************************************
gcloud compute instance-groups managed create nginx-group \
         --base-instance-name nginx \
         --size 2 \
         --template nginx-template \
         --target-pool nginx-pool
*****************************************************
This creates 2 virtual machine instances with names that are prefixed with nginx-. This may take a couple of minutes.



List the compute engine instances and you should see all of the instances created:
***************************************
gcloud compute instances list
***************************************


Now configure a firewall so that you can connect to the machines on port 80 via the EXTERNAL_IP addresses:
*************************************************************
gcloud compute firewall-rules create www-firewall --allow tcp:80
******************************************************************


You should be able to connect to each of the instances via their external IP addresses via http://EXTERNAL_IP/ shown as the result of running the previous command.



Create an L3 network load balancer targeting your instance group:
**************************************************************************
gcloud compute forwarding-rules create nginx-lb \
         --region us-east1 \
         --ports=80 \
         --target-pool nginx-pool
**************************************************************************



List all Compute Engine forwarding rules in your project.
**************************************************************************
gcloud compute forwarding-rules list
**************************************************************************



Creating a HTTP(s) Load Balancer


First, create a health check. Health checks verify that the instance is responding to HTTP or HTTPS traffic:
*****************************************************
gcloud compute http-health-checks create http-basic-check
********************************************************


Define an HTTP service and map a port name to the relevant port for the instance group. Now the load balancing service can forward traffic to the named port:
*****************************************
gcloud compute instance-groups managed \
       set-named-ports nginx-group \
       --named-ports http:80
*****************************************



Create a backend service:
******************************************************************
gcloud compute backend-services create nginx-backend \
      --protocol HTTP --http-health-checks http-basic-check --global
******************************************************************



Add the instance group into the backend service:
******************************************************
gcloud compute backend-services add-backend nginx-backend \
    --instance-group nginx-group \
    --instance-group-zone us-east1-b \
    --global
********************************************************



Create a default URL map that directs all incoming requests to all your instances:
***********************************************
gcloud compute url-maps create web-map \
    --default-service nginx-backend
************************************************



Create a target HTTP proxy to route requests to your URL map:
************************************************
gcloud compute target-http-proxies create http-lb-proxy \
    --url-map web-map
************************************************



Create a global forwarding rule to handle and route incoming requests
***************************************************************
gcloud compute forwarding-rules create http-content-rule \
        --global \
        --target-http-proxy http-lb-proxy \
        --ports 80
***************************************************************



After creating the global forwarding rule, it can take several minutes for your configuration to propagate.
***************************************************
gcloud compute forwarding-rules list
***************************************************
